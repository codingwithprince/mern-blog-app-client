import React, { useState , createContext, useContext, useEffect} from "react";
import { useRouter } from "next/router";
import UserContext from "../components/UserContext";
import Head from "next/head";
import Image from "next/image";
import axios from "axios";
import bcrypt from "bcryptjs";

const login = () => {
  const router = useRouter();
  const [user, setUser] = useState();
  const [admin, setAdmin] = useState();
  const [warning, setWarning] = useState(false);

  const { value } = useContext(UserContext)
  const [ loggedIn, setLoggedIn] = value

  const onBlurHandler = (e) => {
    e.preventDefault();
    setUser({
      ...user,
      [e.target.name]: e.target.value,
    });
  };

  // console.log(admin);
  // console.log(user);
  const loginHandler = async (e) => {
    e.preventDefault();
    try {
      const isMatched = await bcrypt.compare(user.password, admin.password);
      if (admin.email == user.email && isMatched) {
        setLoggedIn(true)
        router.push("/admin");
      } else {
        setWarning(true)
      }
    } catch (error) {
      console.log(error);
    }
  };

  const fetchUser = async () => {
    try {
      const res = await axios.get("https://mern-crud-blog-app.herokuapp.com/login");
      setAdmin(res.data[0]);
    } catch (error) {
      console.log(error);
    }
  };

  useEffect(() => {
    fetchUser();
    if(loggedIn){
      router.push('/admin')
    }
  }, []);

  return (
    <div>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="px-[5%] md:px-[20%] bg-slate-100 py-10">
        <h3 className="text-center text-2xl text-gray-700 py-3">Login</h3>
        <form className="bg-white md:px-[30%] py-[10%] px-3" >
          <div className="flex flex-col py-2">
            <label className="py-2 text-gray-400 font-semibold" htmlFor="title">
              Email
            </label>
            <input
              onBlur={(e) => onBlurHandler(e)}
              className="shadow-md py-3 px-2 rounded-md border-2 border-indigo-200 focus:outline-sky-500"
              type="email"
              name="email"
              id="email"
              required
            />
          </div>
          <div className="flex flex-col py-2">
            <label
              className="py-2 text-gray-400 font-semibold"
              htmlFor="writer"
            >
              Password
            </label>
            <input
              onBlur={(e) => onBlurHandler(e)}
              className="shadow-md py-3 px-2 rounded-md border-2 border-indigo-200 focus:outline-sky-500"
              type="password"
              name="password"
              id="password"
              required
            />
          </div>
          <div className="flex flex-col pt-5 relative">
            <button
              onClick={(e) => loginHandler(e)}
              className="py-2 px-3 rounded-md bg-indigo-500 text-white"
            >
              Login
            </button>
            {
               warning &&  <p className="text-red-600 text-center mt-20 animate-pulse absolute  left-0 right-0 m-auto">Email or password is incorrect.</p>
            }
          </div>
        </form>
       
      </main>
    </div>
  );
};

export default login;
